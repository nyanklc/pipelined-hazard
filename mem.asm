// R2 holds 2
LDR R2, [R2, #4]
// R1 holds 3
LDR R1, [R2, #6]
// ldrstall
SUBS R1, R1, R2, LSL #0
BEQ #28
SUBS R1, R1, R1, LSL #0
BEQ #28

// R0 holds 1 (skip)
LDR R0, [R0, #0]

// R0 holds 2 (PC=28)
LDR R0, [R0, #4]
// R3 holds 1
LDR R3, [R3, #0]
SUBS R0, R0, R3
// should forward M->E
SUBS R0, R0, R3
// store 0 to mem 0
STR R0, [R0, #0]

LDR R4, [R4, #0]
MOVS R1, R0

// end loop
B #56



042092E5
061092E5
021051E0
0200000A
011051E0
0000000A
000090E5
040090E5
003093E5
030050E0
030050E0
000080E5
004094E5
0010B0E1
FEFFFFEA